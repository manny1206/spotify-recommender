{"version":3,"sources":["components/SearchResult.js","components/TrackPlayer.js","components/UserRecommendationCard.js","components/UserRecommendations.js","components/Dashboard.js","useAuth.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","track","playTrack","className","style","cursor","onClick","src","albumUrl","height","width","title","artist","TrackPlayer","accessToken","trackUri","useState","play","setPlay","useEffect","showSaveIcon","token","uris","callback","playState","isPlaying","UserRecommendationCard","Card","sx","maxWidth","CardActionArea","CardMedia","component","image","album","images","reduce","largest","url","alt","CardContent","Typography","gutterBottom","variant","name","length","substring","color","artists","UserRecommendations","recommendations","userRecommendations","setUserRecommendations","Container","minHeight","Grid","container","spacing","rowSpacing","columns","item","xs","textAlign","fontSize","map","external_urls","spotify","spotifyAPI","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","setRecommendations","get","tracks","cancel","searchTracks","body","items","smallAlbumImage","smallest","uri","TextField","fullWidth","margin","label","value","onChange","s","target","overflowY","SPOTIFY_AUTH_URL","Login","position","top","left","transform","Button","borderRadius","href","URLSearchParams","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.310ada40.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function SearchResult({track, playTrack}) {\n  const handlePlayOnClick = () => {\n    playTrack(track)\n  }\n  \n  return (\n    <div className=\"d-flex m-2 align-items-center\" style={{cursor: \"pointer\"}} onClick={handlePlayOnClick}>\n      <img src={track.albumUrl} style={{height: \"64px\", width: \"64px\"}}/>\n      <div className=\"ml-3\">\n        <h1>{track.title}</h1>\n        <h2 className=\"text-muted\">{track.artist}</h2>\n      </div>\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react'\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nexport default function TrackPlayer({accessToken, trackUri}) {\n  const [play, setPlay] = useState(false)\n\n  useEffect(() => {\n    setPlay(true)\n  },[trackUri])\n\n  return (\n    <>\n      {accessToken && \n        <SpotifyPlayer \n          showSaveIcon \n          token={accessToken} \n          uris={trackUri ? [trackUri] : []} \n          play={play}\n          callback={playState => {if (!playState.isPlaying) setPlay(false)}}\n        />\n      }\n    </>\n  )\n}\n","import React from 'react'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport Typography from '@mui/material/Typography'\nimport CardActionArea from '@mui/material/CardActionArea'\n\nexport default function UserRecommendationCard({track, playTrack}) {\n  const handlePlayOnClick = () => {\n    playTrack(track)\n  }\n\n  return (\n    <Card sx={{ maxWidth: 128 }} onClick={handlePlayOnClick}>\n      <CardActionArea>\n      <CardMedia\n          component=\"img\"\n          height=\"128\"\n          image={(track.album.images.reduce((largest, image) => {\n                  if (image.height > largest.height) return image\n                  return largest\n                }, track.album.images[0])).url}\n          alt=\"Album Cover\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n            {track.name.length < 22 ? track.name : track.name.substring(0, 22) + \"...\"}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            {track.artists[0].name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n","import {useState, useEffect} from \"react\"\nimport Container from \"@mui/material/Container\"\nimport Typography from \"@mui/material/Typography\"\nimport Grid  from \"@mui/material/Grid\"\n\nimport UserRecommendationCard from \"./UserRecommendationCard\"\n\nexport default function UserRecommendations({ recommendations, playTrack }) {\n  const [userRecommendations, setUserRecommendations] = useState([])\n  \n\n  useEffect(() => {\n    if (!recommendations) return\n    setUserRecommendations(recommendations)\n  }, [recommendations])\n\n  return (\n    <Container maxWidth=\"md\" style={{minHeight:\"100%\"}}>\n      <Grid container spacing={1} rowSpacing={0.5} columns={4}>\n        <Grid item xs={12} style={{textAlign: \"center\", fontSize: \"30px\"}}>\n          Song Recommendations\n        </Grid>\n      {userRecommendations.map(track => (\n        <Grid item>\n          <UserRecommendationCard track={track} key={track.external_urls.spotify} playTrack={playTrack}/>\n        </Grid>\n      ))}\n      </Grid>\n    </Container>\n\n      \n    \n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { TextField, Container } from \"@mui/material\"\nimport SpotifyWebApi from \"spotify-web-api-node\"\nimport axios from \"axios\"\n\nimport useAuth from \"../useAuth\"\nimport SearchResult from \"./SearchResult\"\nimport TrackPlayer from \"./TrackPlayer\"\nimport UserRecommendations from \"./UserRecommendations\"\n\nconst spotifyAPI = new SpotifyWebApi({\n  clientId: \"fc40f86251ce4a378422d00d57473fa1\"\n})\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code)\n\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  const [playingTrack, setPlayingTrack] = useState()\n  const [recommendations, setRecommendations] = useState([])\n\n  useEffect(() => {\n    if (!accessToken) return\n    spotifyAPI.setAccessToken(accessToken)\n    axios.get(`/recommenderServer/recommend?token=${accessToken}`)\n      .then(res => setRecommendations(res.data.tracks))\n      \n  }, [accessToken])\n\n  useEffect(() => {\n    if (!accessToken) return\n    if (!search) return setSearchResults([])\n\n    let cancel = false\n    spotifyAPI.searchTracks(search)\n      .then(res => {\n        if (cancel) return\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image\n            return smallest\n          }, track.album.images[0])\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallAlbumImage.url\n          }\n        }))\n      })\n\n    return () => (cancel = true)\n  }, [search, accessToken])\n\n  const playTrack = (track) => {\n    setPlayingTrack(track)\n    setSearch(\"\")\n  }\n\n  return (\n    <>\n      <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n        <TextField\n          fullWidth\n          margin=\"normal\"\n          label=\"Search Songs/Artists\"\n          value={search}\n          onChange={s => setSearch(s.target.value)} />\n        <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n          {searchResults.map(track => (\n            <SearchResult track={track} key={track.url} playTrack={playTrack} />\n          ))}\n          {searchResults.length === 0 && (\n            <UserRecommendations recommendations={recommendations} playTrack={playTrack}/>\n          )}\n\n        </div>\n        <div>\n          <TrackPlayer accessToken={accessToken} trackUri={playingTrack?.uri} />\n        </div>\n      </Container>\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState()\n  const [refreshToken, setRefreshToken] = useState()\n  const [expiresIn, setExpiresIn] = useState()\n\n  useEffect(() => {\n    axios.post(\"/authServer/login\", {code,})\n      .then(res => {\n        setAccessToken(res.data.accessToken)\n        setRefreshToken(res.data.refreshToken)\n        setExpiresIn(res.data.expiresIn)\n        window.history.pushState({}, null, \"/\")\n      })\n      .catch(() => {\n        window.location = \"/\"\n      })\n  }, [code])\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) {\n      return\n    }\n    const interval = setInterval(() => {\n      axios.post(\"/authServer/refresh\", {refreshToken,})\n        .then(res => {\n          setAccessToken(res.data.accessToken)\n          setExpiresIn(res.data.expiresIn)\n          window.history.pushState({}, null, \"/\")\n        })\n        .catch(() => {\n          window.location = \"/\"\n        })\n    }, (expiresIn - 60) * 1000)\n\n    return () => clearInterval(interval)\n    \n  }, [refreshToken, expiresIn])\n\n  return accessToken\n}\n","import React from \"react\"\nimport Button from \"@mui/material/Button\"\nimport Container from \"@mui/material/Container\"\nimport { Typography } from \"@mui/material\"\n\nconst SPOTIFY_CLIENT_ID = \"fc40f86251ce4a378422d00d57473fa1\" // change later\nconst SPOTIFY_REDIRECT_URI = \"http://localhost:3000\"\nconst SPOTIFY_SCOPE = \"streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-top-read%20user-read-recently-played\"\nconst SPOTIFY_AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${SPOTIFY_CLIENT_ID}&response_type=code&redirect_uri=${SPOTIFY_REDIRECT_URI}&scope=${SPOTIFY_SCOPE}`\n\nexport default function Login() {\n  return (\n    <div style={{margin: 0, position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\n      <Typography className=\"row justify-content-center\" variant=\"h2\">\n        Spotify Recommender!\n      </Typography>\n      <Container className=\"d-flex justify-content-center\" maxWidth=\"sm\" style={{ minHeight: \"100%\" }}>\n        <Button variant=\"contained\" color=\"success\" style={{ borderRadius: 50 }} href={SPOTIFY_AUTH_URL}>\n          Login With Spotify\n        </Button>\n      </Container>\n    </div>\n  )\n}\n","import './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport React from 'react'\nimport Dashboard from './components/Dashboard'\nimport Login from './components/Login'\n\nconst code = new URLSearchParams(window.location.search).get(\"code\")\n\nfunction App() {\n  \n  return (\n    code ? <Dashboard code={code}/> : <Login/>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}